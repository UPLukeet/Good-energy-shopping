[{"/home/lukeet/Documents/Projects/Good energy/GE-Skill-Test/src/index.js":"1","/home/lukeet/Documents/Projects/Good energy/GE-Skill-Test/src/reportWebVitals.js":"2","/home/lukeet/Documents/Projects/Good energy/GE-Skill-Test/src/App.js":"3","/home/lukeet/Documents/Projects/Good energy/GE-Skill-Test/src/Components/homepage/shoppingPageContainer.js":"4","/home/lukeet/Documents/Projects/Good energy/GE-Skill-Test/src/Components/homepage/ShoppingPageOne.js":"5","/home/lukeet/Documents/Projects/Good energy/GE-Skill-Test/src/Components/homepage/ShoppingPageSecond.js":"6","/home/lukeet/Documents/Projects/Good energy/GE-Skill-Test/src/Components/shoppingData/Ingredients.js":"7","/home/lukeet/Documents/Projects/Good energy/GE-Skill-Test/src/Components/shoppingData/Quantities.js":"8"},{"size":500,"mtime":1606920870683,"results":"9","hashOfConfig":"10"},{"size":362,"mtime":1606920870687,"results":"11","hashOfConfig":"10"},{"size":435,"mtime":1607350005506,"results":"12","hashOfConfig":"10"},{"size":842,"mtime":1607350005509,"results":"13","hashOfConfig":"10"},{"size":2301,"mtime":1607350005509,"results":"14","hashOfConfig":"10"},{"size":4508,"mtime":1607350005509,"results":"15","hashOfConfig":"10"},{"size":359,"mtime":1607350005513,"results":"16","hashOfConfig":"10"},{"size":633,"mtime":1607350005513,"results":"17","hashOfConfig":"10"},{"filePath":"18","messages":"19","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},"zn6m2w",{"filePath":"21","messages":"22","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},{"filePath":"23","messages":"24","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},{"filePath":"25","messages":"26","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},{"filePath":"27","messages":"28","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},{"filePath":"29","messages":"30","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"31","usedDeprecatedRules":"20"},{"filePath":"32","messages":"33","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"34"},{"filePath":"35","messages":"36","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},"/home/lukeet/Documents/Projects/Good energy/GE-Skill-Test/src/index.js",[],["37","38"],"/home/lukeet/Documents/Projects/Good energy/GE-Skill-Test/src/reportWebVitals.js",[],"/home/lukeet/Documents/Projects/Good energy/GE-Skill-Test/src/App.js",[],"/home/lukeet/Documents/Projects/Good energy/GE-Skill-Test/src/Components/homepage/shoppingPageContainer.js",[],"/home/lukeet/Documents/Projects/Good energy/GE-Skill-Test/src/Components/homepage/ShoppingPageOne.js",[],"/home/lukeet/Documents/Projects/Good energy/GE-Skill-Test/src/Components/homepage/ShoppingPageSecond.js",["39","40"],"import React, { useState, useEffect, useContext } from \"react\";\nimport Data from '../shoppingData/Ingredients';\nimport { quantitiesContext } from '../shoppingData/Quantities';\n\nconst ShoppingPageSecond = (props) => {\n  //element displays\n  const [pagetwo_show, setPagetwo_show] = useState(\"pageTwo hide\");\n\n  // imports quanities of ingredients from context api\n  const quantities = useContext(quantitiesContext);\n\n  //contains quantities\n  const Bread = quantities[0].Bread.quantities;\n  const Milk = quantities[0].Milk.quantities;\n  const Cheese = quantities[0].Cheese.quantities;\n  const Soup = quantities[0].Soup.quantities;\n  const Butter = quantities[0].Butter.quantities;\n\n  //sets totals\n  let breadTotal = parseFloat(Bread * Data[0].Price).toFixed(2);\n  let milkTotal = parseFloat(Milk * Data[1].Price).toFixed(2);\n  let cheeseTotal = parseFloat(Cheese * Data[2].Price).toFixed(2);\n  let soupTotal = parseFloat(Soup * Data[3].Price).toFixed(2);\n  let butterTotal = parseFloat(Butter * Data[4].Price).toFixed(2);\n\n  //discounts and savings\n  let [butterDiscount, setButterDiscount] = useState(0);\n  let [cheeseDicscount, setCheeseDiscount] = useState(0);\n  let [breadDiscount, setBreadDiscount] = useState(0);\n\n\n  //Main totals\n  let discountTotal = parseFloat((butterDiscount * 1) + (cheeseDicscount * 1) + (breadDiscount * 1)).toFixed(2);\n  let total = parseFloat((breadTotal * 1) + (milkTotal * 1) + (cheeseTotal * 1) + (soupTotal * 1) + (butterTotal * 1)).toFixed(2);\n\n\n  useEffect(() => {\n\n    //butter discount\n    if (Butter > 0) {\n      setButterDiscount(parseFloat(butterTotal / 3).toFixed(2));\n    } else {\n      setButterDiscount(0);\n    }\n\n    //cheese discount\n    if (Cheese > 1) {\n      setCheeseDiscount(parseFloat(Math.floor(Cheese / 2) * Data[2].Price).toFixed(2))\n    } else {\n      setCheeseDiscount(0);\n    }\n\n    //bread discount\n    if (Soup > 0) {\n\n      //checks the difference between Soup quanitities and Bread\n      let diff = Bread - Soup;\n\n      if (diff <= 0) {\n        setBreadDiscount(parseFloat(breadTotal / 2).toFixed(2));\n      } else {\n        setBreadDiscount(parseFloat((Bread - diff) * (Data[0].Price / 2)).toFixed(2));\n      }\n\n    } else {\n      setBreadDiscount(0)\n    }\n\n  }, [quantities])\n\n\n  useEffect(() => {\n    //resets info text\n    if (props.showTwo) {\n      setPagetwo_show(\"pageTwo\");\n    } else {\n      setPagetwo_show(\"pageTwo hide\");\n    }\n  }, [props.showTwo]);\n\n\n  return (\n    <div className={\"Shopping_Content \" + pagetwo_show}>\n\n\n      {Bread > 0 && <div className=\"Shopping_output\">\n        <p>Bread:<br />{Bread}x £{Data[0].Price}</p>\n        <div className='Shopping_item_total'>\n          {Soup > 0 && <p className='Item_discount'>Discount: -£{breadDiscount}</p>}\n          <p>Item-Total: £{parseFloat(breadTotal - breadDiscount).toFixed(2)}</p>\n        </div>\n      </div>}\n      {Milk > 0 && <div className=\"Shopping_output\">\n        <p>Milk:<br />{Milk}x £{Data[1].Price}</p>\n        <div className='Shopping_item_total'>\n          <p>Item-Total:£{milkTotal}</p>\n        </div>\n      </div>}\n      {Cheese > 0 && <div className=\"Shopping_output\">\n        <p>Cheese:<br />{Cheese}x £{Data[2].Price}</p>\n        <div className='Shopping_item_total'>\n          {Cheese > 1 && <p className='Item_discount'>Discount: -£{cheeseDicscount}</p>}\n          <p>Item-Total: £{parseFloat(cheeseTotal - cheeseDicscount).toFixed(2)}</p>\n        </div>\n      </div>}\n      {Soup > 0 && <div className=\"Shopping_output\">\n        <p>Soup:<br />{Soup}x £{Data[3].Price}</p>\n        <div className='Shopping_item_total'>\n          <p>Item-Total: £{soupTotal}</p>\n        </div>\n      </div>}\n      {Butter > 0 && <div className=\"Shopping_output\">\n        <p>Butter:<br />{Butter}x £{Data[4].Price}</p>\n        <div className='Shopping_item_total'>\n          <p className='Item_discount'>Discount: -£{butterDiscount}</p>\n          <p>Item-Total: £{parseFloat(butterTotal - butterDiscount).toFixed(2)}</p>\n        </div>\n      </div>}\n      {total > 0 && <div className=\"Shopping_total\">\n        {discountTotal == 0 && <p>Total: £{total}</p>}\n        {discountTotal > 0 && <p>Discount: -£{discountTotal}</p>}\n        {discountTotal > 0 && <p>Subtotal: £{total}</p>}\n        {discountTotal > 0 && <p>Total: £{parseFloat(total - discountTotal).toFixed(2)}</p>}\n      </div>}\n\n      <div className=\"Shopping_Buttons\">\n        <p onClick={props.Reset_Data}>Shop Again</p>\n      </div>\n\n    </div>\n  );\n};\n\nexport default ShoppingPageSecond;\n","/home/lukeet/Documents/Projects/Good energy/GE-Skill-Test/src/Components/shoppingData/Ingredients.js",["41"],"//Json data for the shopping ingredients\n\nexport default [\n    {\n        Name: 'Bread',\n        Price: \"1.10\",\n    },\n\n    {\n        Name: 'Milk',\n        Price: \"0.50\",\n    },\n\n    {\n        Name: 'Cheese',\n        Price: \"0.90\",\n    },\n\n    {\n        Name: 'Soup',\n        Price: \"0.60\",\n    },\n\n    {\n        Name: 'Butter',\n        Price: \"1.20\",\n    }\n]\n","/home/lukeet/Documents/Projects/Good energy/GE-Skill-Test/src/Components/shoppingData/Quantities.js",[],{"ruleId":"42","replacedBy":"43"},{"ruleId":"44","replacedBy":"45"},{"ruleId":"46","severity":1,"message":"47","line":69,"column":6,"nodeType":"48","endLine":69,"endColumn":18,"suggestions":"49"},{"ruleId":"50","severity":1,"message":"51","line":120,"column":24,"nodeType":"52","messageId":"53","endLine":120,"endColumn":26},{"ruleId":"54","severity":1,"message":"55","line":3,"column":1,"nodeType":"56","endLine":28,"endColumn":2},"no-native-reassign",["57"],"no-negated-in-lhs",["58"],"react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'Bread', 'Butter', 'Cheese', 'Soup', 'breadTotal', and 'butterTotal'. Either include them or remove the dependency array.","ArrayExpression",["59"],"eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","import/no-anonymous-default-export","Assign array to a variable before exporting as module default","ExportDefaultDeclaration","no-global-assign","no-unsafe-negation",{"desc":"60","fix":"61"},"Update the dependencies array to be: [Bread, Butter, Cheese, Soup, breadTotal, butterTotal, quantities]",{"range":"62","text":"63"},[2228,2240],"[Bread, Butter, Cheese, Soup, breadTotal, butterTotal, quantities]"]